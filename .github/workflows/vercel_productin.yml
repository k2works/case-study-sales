name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Start Database Services
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./docker-compose.yml"
          services: |
            db_postgresql

      - name: Install Prisma
        run: npm install
        working-directory: ./db
      - name: Setup DB
        run: |
          echo DATABASE_URL="postgresql://root:password@localhost:5432/mydb?schema=public" > .env
          npx prisma migrate dev
        working-directory: ./db
      - name: Run tests
        run: npm test
        working-directory: ./db

      - name: Setup Graphviz
        uses: tlylt/install-graphviz@main

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew
        working-directory: app/backend/api

      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Work round for Report Generation
        run: npm run allure:build
      - name: Work round for Report Generation
        run: cp -r public/allure .vercel/output/static
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
