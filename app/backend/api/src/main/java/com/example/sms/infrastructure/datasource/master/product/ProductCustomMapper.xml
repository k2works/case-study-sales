<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sms.infrastructure.datasource.master.product.ProductCustomMapper">
    <resultMap
            id="BaseResultMap"
            type="com.example.sms.infrastructure.datasource.master.product.ProductCustomEntity"
            extends="com.example.sms.infrastructure.datasource.autogen.mapper.商品マスタMapper.BaseResultMap"
    >
        <collection property="代替商品"
                    javaType="ArrayList"
                    column="商品コード"
                    select="com.example.sms.infrastructure.datasource.master.product.substitute.SubstituteProductCustomMapper.selectByProductCode"
                    fetchType="eager"
        />

        <collection property="部品表"
                    javaType="ArrayList"
                    column="商品コード"
                    select="com.example.sms.infrastructure.datasource.master.product.bom.BomCustomMapper.selectByProductCode"
                    fetchType="eager"
        />

        <collection property="顧客別販売単価"
                    javaType="ArrayList"
                    column="商品コード"
                    select="com.example.sms.infrastructure.datasource.master.product.customer_specific_price.CustomerSpecificSellingPriceCustomMapper.selectByProductCode"
                    fetchType="eager"
        />
    </resultMap>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="com.example.sms.infrastructure.datasource.autogen.mapper.商品マスタMapper.Base_Column_List"/>
        from public.商品マスタ
        where 商品コード = #{商品コード,jdbcType=VARCHAR}
    </select>

    <select id="selectAll" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="com.example.sms.infrastructure.datasource.autogen.mapper.商品マスタMapper.Base_Column_List"/>
        from public.商品マスタ
    </select>

    <select id="selectByProductCategoryCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="com.example.sms.infrastructure.datasource.autogen.mapper.商品マスタMapper.Base_Column_List"/>
        from public.商品マスタ
        where 商品分類コード = #{商品分類コード,jdbcType=VARCHAR}
    </select>

    <select id="selectAllBoms" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="com.example.sms.infrastructure.datasource.autogen.mapper.商品マスタMapper.Base_Column_List"/>
        from public.商品マスタ
        where
        商品区分 IN
        <foreach item="item" index="index" collection="boms"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectByCriteria" resultMap="BaseResultMap">
        select
        <include refid="com.example.sms.infrastructure.datasource.autogen.mapper.商品マスタMapper.Base_Column_List"/>
        from public.商品マスタ
        <where>
            <if test="productCode != null">
                商品コード = #{productCode,jdbcType=VARCHAR}
            </if>
            <if test="productNameFormal != null">
                and 商品正式名 = #{productNameFormal,jdbcType=VARCHAR}
            </if>
            <if test="productNameAbbreviation != null">
                and 商品略称 = #{productNameAbbreviation,jdbcType=VARCHAR}
            </if>
            <if test="productNameKana != null">
                and 商品名カナ = #{productNameKana,jdbcType=VARCHAR}
            </if>
            <if test="productCategoryCode != null">
                and 商品分類コード = #{productCategoryCode,jdbcType=VARCHAR}
            </if>
            <if test="vendorCode != null">
                and 仕入先コード = #{vendorCode,jdbcType=VARCHAR}
            </if>
            <if test="productType != null">
                and 商品区分 = #{productType,jdbcType=VARCHAR}
            </if>
            <if test="taxType != null">
                and 税区分 = #{taxType,jdbcType=VARCHAR}
            </if>
            <if test="miscellaneousType != null">
                and 雑区分 = #{miscellaneousType,jdbcType=VARCHAR}
            </if>
            <if test="stockManagementTargetType != null">
                and 在庫管理対象区分 = #{stockManagementTargetType,jdbcType=VARCHAR}
            </if>
            <if test="stockAllocationType != null">
                and 在庫引当区分 = #{stockAllocationType,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <insert id="insertForOptimisticLock" parameterType="com.example.sms.infrastructure.datasource.autogen.model.商品マスタ">
        insert into public.商品マスタ (商品コード, 商品正式名, 商品略称,
        商品名カナ, 商品区分, 製品型番,
        販売単価, 仕入単価, 売上原価, 税区分,
        商品分類コード, 雑区分, 在庫管理対象区分,
        在庫引当区分, 仕入先コード, 仕入先枝番,
        作成日時, 作成者名, 更新日時,
        更新者名)
        values (#{商品コード,jdbcType=VARCHAR}, #{商品正式名,jdbcType=VARCHAR}, #{商品略称,jdbcType=VARCHAR},
        #{商品名カナ,jdbcType=VARCHAR}, #{商品区分,jdbcType=VARCHAR}, #{製品型番,jdbcType=VARCHAR},
        #{販売単価,jdbcType=INTEGER}, #{仕入単価,jdbcType=INTEGER}, #{売上原価,jdbcType=INTEGER}, #{税区分,jdbcType=INTEGER},
        #{商品分類コード,jdbcType=VARCHAR}, #{雑区分,jdbcType=INTEGER}, #{在庫管理対象区分,jdbcType=INTEGER},
        #{在庫引当区分,jdbcType=INTEGER}, #{仕入先コード,jdbcType=VARCHAR}, #{仕入先枝番,jdbcType=INTEGER},
        #{作成日時,jdbcType=TIMESTAMP}, #{作成者名,jdbcType=VARCHAR}, #{更新日時,jdbcType=TIMESTAMP},
        #{更新者名,jdbcType=VARCHAR})
    </insert>

    <update id="updateByPrimaryKeyForOptimisticLock" parameterType="com.example.sms.infrastructure.datasource.autogen.model.商品マスタ">
        update public.商品マスタ
        set 商品正式名 = #{商品正式名,jdbcType=VARCHAR},
        商品略称 = #{商品略称,jdbcType=VARCHAR},
        商品名カナ = #{商品名カナ,jdbcType=VARCHAR},
        商品区分 = #{商品区分,jdbcType=VARCHAR},
        製品型番 = #{製品型番,jdbcType=VARCHAR},
        販売単価 = #{販売単価,jdbcType=INTEGER},
        仕入単価 = #{仕入単価,jdbcType=INTEGER},
        売上原価 = #{売上原価,jdbcType=INTEGER},
        税区分 = #{税区分,jdbcType=INTEGER},
        商品分類コード = #{商品分類コード,jdbcType=VARCHAR},
        雑区分 = #{雑区分,jdbcType=INTEGER},
        在庫管理対象区分 = #{在庫管理対象区分,jdbcType=INTEGER},
        在庫引当区分 = #{在庫引当区分,jdbcType=INTEGER},
        仕入先コード = #{仕入先コード,jdbcType=VARCHAR},
        仕入先枝番 = #{仕入先枝番,jdbcType=INTEGER},
        作成日時 = #{作成日時,jdbcType=TIMESTAMP},
        作成者名 = #{作成者名,jdbcType=VARCHAR},
        更新日時 = #{更新日時,jdbcType=TIMESTAMP},
        更新者名 = #{更新者名,jdbcType=VARCHAR},
        version = #{version,jdbcType=INTEGER} + 1
        where 商品コード = #{商品コード,jdbcType=VARCHAR}
        and version = #{version,jdbcType=INTEGER}
    </update>
</mapper>
