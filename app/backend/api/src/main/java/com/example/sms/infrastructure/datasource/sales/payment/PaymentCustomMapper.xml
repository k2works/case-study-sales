<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sms.infrastructure.datasource.sales.payment.PaymentCustomMapper">
    
    <!-- BaseResultMap -->
    <resultMap
            id="BaseResultMap"
            type="com.example.sms.infrastructure.datasource.sales.payment.PaymentCustomEntity"
            extends="com.example.sms.infrastructure.datasource.autogen.mapper.入金データMapper.BaseResultMap">
        <association property="部門マスタ"
                     javaType="com.example.sms.infrastructure.datasource.master.department.DepartmentCustomEntity"
                     column="{部門コード=部門コード, 開始日=開始日}"
                     select="com.example.sms.infrastructure.datasource.master.department.DepartmentCustomMapper.selectByPrimaryKey"
                     fetchType="eager" />
        <association property="顧客マスタ"
                     javaType="com.example.sms.infrastructure.datasource.master.partner.customer.CustomerCustomEntity"
                     column="{顧客コード=顧客コード, 顧客枝番=顧客枝番}"
                     select="com.example.sms.infrastructure.datasource.master.partner.customer.CustomerCustomMapper.selectByPrimaryKey"
                     fetchType="eager" />
        <association property="入金口座マスタ"
                     javaType="com.example.sms.infrastructure.datasource.master.payment.account.PaymentAccountCustomEntity"
                     column="入金口座コード"
                     select="com.example.sms.infrastructure.datasource.master.payment.account.PaymentAccountCustomMapper.selectByPrimaryKey"
                     fetchType="eager" />
    </resultMap>

    <!-- selectByPrimaryKey -->
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select 
        <include refid="com.example.sms.infrastructure.datasource.autogen.mapper.入金データMapper.Base_Column_List" />
        from public.入金データ
        where 入金番号 = #{入金番号,jdbcType=VARCHAR}
    </select>

    <!-- selectAll -->
    <select id="selectAll" resultMap="BaseResultMap">
        select 
        <include refid="com.example.sms.infrastructure.datasource.autogen.mapper.入金データMapper.Base_Column_List" />
        from public.入金データ
    </select>

    <!-- selectByCustomer -->
    <select id="selectByCustomer" resultMap="BaseResultMap">
        select 
        <include refid="com.example.sms.infrastructure.datasource.autogen.mapper.入金データMapper.Base_Column_List" />
        from public.入金データ
        where 顧客コード = #{customerCode,jdbcType=VARCHAR}
        and 顧客枝番 = #{branchNumber,jdbcType=INTEGER}
    </select>

    <!-- selectByAccount -->
    <select id="selectByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
        select 
        <include refid="com.example.sms.infrastructure.datasource.autogen.mapper.入金データMapper.Base_Column_List" />
        from public.入金データ
        where 入金口座コード = #{accountCode,jdbcType=VARCHAR}
    </select>

    <!-- insert -->
    <insert id="insert" parameterType="com.example.sms.infrastructure.datasource.sales.payment.PaymentCustomEntity">
        insert into public.入金データ (
            入金番号,
            入金日,
            部門コード,
            開始日,
            顧客コード,
            顧客枝番,
            支払方法区分,
            入金口座コード,
            入金金額,
            消込金額,
            作成日時,
            作成者名,
            更新日時,
            更新者名,
            プログラム更新日時,
            更新プログラム名,
            version
        )
        values (
            #{入金番号,jdbcType=VARCHAR},
            #{入金日,jdbcType=TIMESTAMP},
            #{部門コード,jdbcType=VARCHAR},
            #{開始日,jdbcType=TIMESTAMP},
            #{顧客コード,jdbcType=VARCHAR},
            #{顧客枝番,jdbcType=INTEGER},
            #{支払方法区分,jdbcType=INTEGER},
            #{入金口座コード,jdbcType=VARCHAR},
            #{入金金額,jdbcType=INTEGER},
            #{消込金額,jdbcType=INTEGER},
            #{作成日時,jdbcType=TIMESTAMP},
            #{作成者名,jdbcType=VARCHAR},
            #{更新日時,jdbcType=TIMESTAMP},
            #{更新者名,jdbcType=VARCHAR},
            #{プログラム更新日時,jdbcType=TIMESTAMP},
            #{更新プログラム名,jdbcType=VARCHAR},
            1
        )
    </insert>

    <!-- updateByPrimaryKeyForOptimisticLock -->
    <update id="updateByPrimaryKeyForOptimisticLock" parameterType="com.example.sms.infrastructure.datasource.sales.payment.PaymentCustomEntity">
        update public.入金データ
        set 入金日 = #{入金日,jdbcType=TIMESTAMP},
            部門コード = #{部門コード,jdbcType=VARCHAR},
            開始日 = #{開始日,jdbcType=TIMESTAMP},
            顧客コード = #{顧客コード,jdbcType=VARCHAR},
            顧客枝番 = #{顧客枝番,jdbcType=INTEGER},
            支払方法区分 = #{支払方法区分,jdbcType=INTEGER},
            入金口座コード = #{入金口座コード,jdbcType=VARCHAR},
            入金金額 = #{入金金額,jdbcType=INTEGER},
            消込金額 = #{消込金額,jdbcType=INTEGER},
            作成日時 = #{作成日時,jdbcType=TIMESTAMP},
            作成者名 = #{作成者名,jdbcType=VARCHAR},
            更新日時 = #{更新日時,jdbcType=TIMESTAMP},
            更新者名 = #{更新者名,jdbcType=VARCHAR},
            プログラム更新日時 = #{プログラム更新日時,jdbcType=TIMESTAMP},
            更新プログラム名 = #{更新プログラム名,jdbcType=VARCHAR},
            version = #{version,jdbcType=INTEGER} + 1
        where 入金番号 = #{入金番号,jdbcType=VARCHAR}
        and version = #{version,jdbcType=INTEGER}
    </update>
</mapper>